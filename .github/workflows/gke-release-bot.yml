name: GKE Release Bot (Codex)

on:
  schedule:
    - cron: "40 11 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  update-map:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Node
        uses: actions/setup-node@v4
        with: { node-version: "20" }

      - name: Set up Go
        uses: actions/setup-go@v5
        with: { go-version: "1.22.x" }

      - name: Verify OpenAI API key
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          test -n "$OPENAI_API_KEY" || (echo "OPENAI_API_KEY secret is empty"; exit 1)
          code=$(curl -sS -o /tmp/resp.json -w "%{http_code}" \
            -H "Authorization: Bearer $OPENAI_API_KEY" https://api.openai.com/v1/models)
          if [ "$code" -lt 200 ] || [ "$code" -ge 300 ]; then
            echo "OpenAI key test failed (HTTP $code). Body:"; cat /tmp/resp.json; exit 1
          fi
          echo "OpenAI key looks good (HTTP $code)."

      - name: Run Codex (headless)
        id: codex
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          npm install -g @openai/codex
          codex --version
          git reset --hard
          git clean -fd
          set +e
          # pass prompt contents; force widely-available model
          OPENAI_API_KEY="$OPENAI_API_KEY" codex exec --full-auto --model gpt-4o "$(cat prompts/gke-latest.md)"
          CODE=$?
          set -e
          if command -v gofmt >/dev/null 2>&1; then gofmt -s -w .; fi
          if git diff --quiet; then
            echo "changed=0" >> "$GITHUB_OUTPUT"
          else
            echo "changed=1" >> "$GITHUB_OUTPUT"
          fi
          echo "status=${CODE}" >> "$GITHUB_OUTPUT"

      - name: Create PR
        if: steps.codex.outputs.changed == '1'
        uses: peter-evans/create-pull-request@v6
        with:
          # If your repo blocks PRs via GITHUB_TOKEN, add a PAT and uncomment:
          # token: ${{ secrets.CREATE_PR_TOKEN }}
          commit-message: "chore(gke): add latest Stable R releases"
          title: "chore(gke): add latest Stable R releases"
          body: |
            Automated update of `GKEProjectReleases` (Stable channel only),
            using daily workflow and the prompt in `prompts/gke-latest.md`.
          branch: chore/gke-release-auto
          delete-branch: true
          signoff: true

      - name: Fail if Codex errored without changes
        if: ${{ steps.codex.outputs.status != '0' && steps.codex.outputs.changed != '1' }}
        run: exit 1
